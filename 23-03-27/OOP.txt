Q : 객체지향 프로그래밍(OOP)에 대해 설명해주세요. 알고있는 원칙이나 키워드를 언급해주세요
A : 객체를 사용하여 프로그램을 개발하고 구조화하는데 초점을 맞춘 프로그래밍 패러다임입니다. OOP의 몇가지 주요 원칙과 더불어 코드 재사용 가능성, 확장성 및 유지보수 용이성을 개선합니다.
OOP의 대표적인 주요 원칙은 캡슐화,상속,다형성,추상화가 있습니다. 캡슐화는 객체의 속성과 메서드를 하나의 단위로 묶어서 외부로 부터 데이터를 숨기는 기법입니다. private으로 선언하여 클래스 외부에서 직접적으로 접근하지 못하게 막아 내부 상태를 숨기며 데이터를 보호합니다. 이후 setter 혹은 생성자에서 속성 값을 설정하는 방식등으로 값을 다룰 수 있습니다.
상속은 기존의 클래스를 재사용하여 새로운 클래스를 작성하는 것입니다. 코드의 재사용성을 높이고 코드의 중복을 제거할 수 있습니다.
다형성은 여러 가지 형태를 가질 수 있는 능력을 의미하며 다앙햔 클래스의 객체가 동일한 인터페이스를 공유하거나 기본 클래스를 가질 수 있게합니다. 구체적으로 조상클래스 타입의 참조변수로 자손클래스의 인스턴스를 참조할 수 있게 합니다. 이로써 유연하고 확장 가능한 코드를 작성할 수 있습니다.
추상화는 프로그램의 주요 구성 요소와 공통된 데이터,기능을 추출하여 클래스,인터페이스로 나타낸 것입니다. 자손클래스가 구현해야할 기능을 명시해둔 추상클래스의 추상메서드를 상속받아 인스턴스를 생성하거나 혹은 클래스가 구현해야 하는 메서드의 템플릿을 제공함으로써 느슨한 결합 구현 및 공통된 기능을 재사용하고 클래스 계층 구조를 구성할 수 있습니다.